#pragma once
#define max 30
class Pilass
{
private :
	int pila[max];
	int tope;

public:
	Pilass(void);
	~Pilass(void);
	bool pila_insertar(int dato);
	bool pila_eliminar(int &dato);
	bool pila_vacio();
    bool pila_lleno();
	void mostrarpila(int n);

};



#include "StdAfx.h"
#include "conio.h"
#include <iostream>
#include "Pilass.h"
#define max 30
using namespace std;



Pilass::Pilass(void)
{
	tope=-1;
}


Pilass::~Pilass(void)
{
}
bool Pilass::pila_insertar(int dato)
{
	if (pila_lleno()==false)
	{
		tope++;
		pila[tope]=dato;
		return true;
	}
	else 
		return false;
}

	bool Pilass::pila_eliminar(int &dato)
{
	if (pila_lleno()==true)
	{
		dato=pila[tope];
		tope--;
		return true;
	}
	else 
		return false;
}

bool Pilass::pila_vacio()
{
	if (tope==-1)
	{
		return true;
	}
	else 
		return false;
}
bool Pilass::pila_lleno()
{
	if (tope==max-1)
	{
		return true; 
	}
	else 
	return false;
}

void Pilass::mostrarpila(int n)
{
	int i=0;
	for(i=0;i<n;i++)
	{
		cout<<" |   "<<pila[i]<<"  |  "<<endl;
	}
	
}

// pilas.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "conio.h"
#include <iostream>
#include "Pilass.h"

using namespace std;
void main()

{
	Pilass pila1,pila2;
	int x,n,op,i;
	i=0;
	
	do{
		cout<<"Coloque el tamaño de la pila :   ";
		cin>>n;
	 
	}while((n>30)||(n<0));

	do{
	cout<<"                     --------           MENU        --------"<<endl;
	cout<<"           1° Ingresar datos a la  pila         "<<endl;
	cout<<"           2° Eliminar datos de la pila        "<<endl;
	cout<<"           3° Mostrar la pila                  "<<endl;
	cout<<"           4° Mostrar elemento tope            "<<endl;
	cout<<"           5° SALIR :)                         "<<endl;
	cin>>op;
	switch (op)
	{
	  case 1:
			i=0;	
		  while(i<n)
				{
					cout<<"Ingrese un dato ["<<i<<"] = "<<endl;
				    cin>>x;
         pila1.pila_insertar(x);
					i++;
				}
				pila2=pila1;
				break;
	  case 2:
		        i=0;
				pila2=pila1;
				while(i<n)
				{
					pila1.pila_eliminar(x);
					i++;
				}
				break;
	  case 3:
                  pila1.mostrarpila(n);
				  break;
	  case 4 :
		  cout<<" ";
		  break;
	  case 5:
		  cout<<"salir";
		  break;
	  default:
		  cout<<"error";
		  break;
	}
	}while(op!=5);
	getch();

}



	
